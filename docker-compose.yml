# This file contains all of the services for an edX installation. See https://docs.docker.com/compose/compose-file/
# for the appropriate syntax and definitions.
#
# Housekeeping Rules:
# - Group third-party and edX services separately
# - Alphabetize services in the groups
# - Alphabetize individual configuration options for each service
# - Every service's container name should be prefixed with "edx.devstack." to avoid conflicts with other containers
#   that might be running for the same service.

version: "2.1"

services:
  # Third-party services
  chrome:
    container_name: edx.devstack.chrome
    image: edxops/chrome:${OPENEDX_RELEASE:-latest}
    shm_size: 2g
    ports:
      - "15900:5900"
    volumes:  # for file uploads
      - ${BITBUCKET_CLONE_DIR}/edx-e2e-tests/upload_files:/edx/app/e2e/edx-e2e-tests/upload_files
      - ${BITBUCKET_CLONE_DIR}/edx-platform/common/test/data:/edx/app/edxapp/edx-platform/common/test/data
      
  edx_notes_api:
    command: bash -c 'source /edx/app/edx_notes_api/edx_notes_api_env && while true; do python /edx/app/edx_notes_api/edx_notes_api/manage.py runserver 0.0.0.0:18120 --settings notesserver.settings.devstack; sleep 2; done'
    container_name: edx.devstack.edx_notes_api
    depends_on:
      - devpi
      - elasticsearch
      - mysql
    image: edxops/notes:${OPENEDX_RELEASE:-latest}
    ports:
      - "18120:18120"
    environment:
      DB_ENGINE: "django.db.backends.mysql"
      DB_HOST: "edx.devstack.mysql"
      DB_NAME: "notes"
      DB_PASSWORD: "password"
      DB_PORT: "3306"
      DB_USER: "notes001"
      ENABLE_DJANGO_TOOLBAR: 1
      ELASTICSEARCH_URL: "http://edx.devstack.elasticsearch:9200"
  
  elasticsearch:
    container_name: edx.devstack.elasticsearch
    image: edxops/elasticsearch:devstack
    # TODO: What to do about these forwarded ports? They'll conflict with ports forwarded by the Vagrant VM.
    # ports:
    #   - "9200:9200"
    #   - "9300:9300"
    volumes:
      - ${BITBUCKET_CLONE_DIR}/elasticsearch_data:/usr/share/elasticsearch/data
      - ${BITBUCKET_CLONE_DIR}/elasticsearch_data:/usr/share/elasticsearch/logs

  firefox:
    container_name: edx.devstack.firefox
    image: edxops/firefox:${OPENEDX_RELEASE:-latest}
    shm_size: 2g
    ports:
      - "25900:5900"
    volumes:  # for file uploads
      - ${BITBUCKET_CLONE_DIR}/edx-e2e-tests/upload_files:/edx/app/e2e/edx-e2e-tests/upload_files
      - ${BITBUCKET_CLONE_DIR}/edx-platform/common/test/data:/edx/app/edxapp/edx-platform/common/test/data

  memcached:
    container_name: edx.devstack.memcached
    image: memcached:1.4.24
    # ports:
    #   - "11211:11211"

  mongo:
    # We use WiredTiger in all environments. In development environments we use small files
    # to conserve disk space, and disable the journal for a minor performance gain.
    # See https://docs.mongodb.com/v3.0/reference/program/mongod/#options for complete details.
    command: mongod --smallfiles --nojournal --storageEngine wiredTiger
    container_name: edx.devstack.mongo
    image: mongo:3.2.16
    # ports:
    #  - "27017:27017"
    volumes:
      - ${BITBUCKET_CLONE_DIR}/mongo_data:/data/db

  mysql:
    command: mysqld --character-set-server=utf8 --collation-server=utf8_general_ci
    container_name: edx.devstack.mysql
    environment:
      MYSQL_ROOT_PASSWORD: ""
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    image: mysql:5.6
    # ports:
    #   - "3306:3306"
    volumes:
      - ${BITBUCKET_CLONE_DIR}/mysql_data:/var/lib/mysql


  


  lms:
    command: bash -c 'source /edx/app/edxapp/edxapp_env && while true; do python /edx/app/edxapp/edx-platform/manage.py lms runserver 0.0.0.0:18000 --settings devstack_docker; sleep 2; done'
    container_name: edx.devstack.lms
    depends_on:
      - devpi
      - mysql
      - memcached
      - mongo
    # Allows attachment to the LMS service using 'docker attach <containerID>'.
    stdin_open: true
    tty: true
    environment:
      BOK_CHOY_HOSTNAME: edx.devstack.lms
      BOK_CHOY_LMS_PORT: 18003
      BOK_CHOY_CMS_PORT: 18031
      EDXAPP_TEST_MONGO_HOST: edx.devstack.mongo
      NO_PYTHON_UNINSTALL: 1
    image: edxops/edxapp:${OPENEDX_RELEASE:-latest}
    ports:
      - "18000:18000"
      - "19876:19876" # JS test debugging
      # - "18003:18003"
      # - "18031:18031"
    volumes:
      - ${BITBUCKET_CLONE_DIR}/edxapp_lms_assets:/edx/var/edxapp/staticfiles/

  

  studio:
    command: bash -c 'source /edx/app/edxapp/edxapp_env && while true; do python /edx/app/edxapp/edx-platform/manage.py cms runserver 0.0.0.0:18010 --settings devstack_docker; sleep 2; done'
    container_name: edx.devstack.studio
    depends_on:
      - devpi
      - mysql
      - memcached
      - mongo
    # Allows attachment to the Studio service using 'docker attach <containerID>'.
    stdin_open: true
    tty: true
    environment:
      BOK_CHOY_HOSTNAME: edx.devstack.studio
      BOK_CHOY_LMS_PORT: 18103
      BOK_CHOY_CMS_PORT: 18131
      EDXAPP_TEST_MONGO_HOST: edx.devstack.mongo
      NO_PYTHON_UNINSTALL: 1
    image: edxops/edxapp:${OPENEDX_RELEASE:-latest}
    ports:
      - "18010:18010"
      - "19877:19877" # JS test debugging
      # - "18103:18103"
      # - "18131:18131"
    volumes:
      - ${BITBUCKET_CLONE_DIR}/edxapp_studio_assets:/edx/var/edxapp/staticfiles/

  

  devpi:
    container_name: edx.devstack.devpi
    image: edxops/devpi:${OPENEDX_RELEASE:-latest}
    ports:
      - "3141:3141"
    volumes:
      - ${BITBUCKET_CLONE_DIR}/devpi_data:/data

volumes:
  edxapp_lms_assets:
  edxapp_studio_assets:
  elasticsearch_data:
  mongo_data:
  mysql_data:
  devpi_data:
